version: '3.8'

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: dockerfile

  opentelemetry-collector:
    build:
      context: ./opentelemetry-collector
      dockerfile: dockerfile
    ports:
      - "4317:4317"
      - "4318:4318"
    volumes:
      - opentelemetry-collector_data:/var/otelcol-contrib
  prometheus:
    build:
      context: ./prometheus
      dockerfile: dockerfile
    user: root # required for data persistence
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
    depends_on:
      - nginx

  loki:
    build:
      context: ./loki
      dockerfile: dockerfile
    user: root # required for data persistence
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki

  tempo: 
    build:
      context: ./tempo
      dockerfile: dockerfile
    user: root # required for data persistence
    ports:
      - "3200:3200" # http server for querying
      - "4317:4317" # grpc server for ingest
      - "4318:4318" # http server for ingest
    volumes:
      - tempo_data:/var/tempo

  grafana:
    build:
      context: ./grafana
      dockerfile: dockerfile
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=yourpassword123
      - GF_DEFAULT_INSTANCE_NAME=Grafana
      - GF_INSTALL_PLUGINS=grafana-simple-json-datasource,grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel
      - LOKI_INTERNAL_URL=http://loki:3100
      - PROMETHEUS_INTERNAL_URL=http://prometheus:9090
      - TEMPO_INTERNAL_URL=http://tempo:3200

volumes: 
  prometheus_data:
  loki_data:
  grafana_data:
  tempo_data:
  opentelemetry-collector_data: